import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { AlertCircle } from "lucide-react";
import { cn } from "@/lib/utils";

interface Vulnerability {
  id: string;
  system: string;
  issue: string;
  severity: "low" | "medium" | "high" | "critical";
  cvss?: number;
  status: "open" | "patching" | "resolved";
}

interface VulnerabilityListProps {
  vulnerabilities: Vulnerability[];
}

const severityColors = {
  low: "bg-success/10 text-success",
  medium: "bg-warning/10 text-warning",
  high: "bg-warning/10 text-warning",
  critical: "bg-critical/10 text-critical"
};

const statusColors = {
  open: "border-critical/30",
  patching: "border-warning/30",
  resolved: "border-success/30"
};

export function VulnerabilityList({ vulnerabilities }: VulnerabilityListProps) {
  return (
    <Card>
      <CardHeader>
        <CardTitle>Vulnerabilities</CardTitle>
        <CardDescription>System weaknesses and patches needed</CardDescription>
      </CardHeader>
      <CardContent>
        <div className="space-y-3">
          {vulnerabilities.map((vuln) => (
            <div
              key={vuln.id}
              className={cn(
                "rounded-lg border p-4 transition-all hover:shadow-md",
                statusColors[vuln.status]
              )}
            >
              <div className="flex-1 space-y-2">
                <div className="flex items-center gap-2 flex-wrap">
                  <span className="font-medium">{vuln.system}</span>
                  <Badge className={severityColors[vuln.severity]}>
                    {vuln.severity.toUpperCase()}
                  </Badge>
                  {vuln.cvss && (
                    <Badge variant="outline">CVSS: {vuln.cvss}</Badge>
                  )}
                </div>
                <p className="text-sm text-muted-foreground">{vuln.issue}</p>
                <div className="flex items-center gap-2">
                  <AlertCircle className={cn(
                    "h-3 w-3",
                    vuln.status === "open" && "text-critical",
                    vuln.status === "patching" && "text-warning",
                    vuln.status === "resolved" && "text-success"
                  )} />
                  <span className="text-xs text-muted-foreground">
                    Status: {vuln.status.charAt(0).toUpperCase() + vuln.status.slice(1)}
                  </span>
                </div>
              </div>
            </div>
          ))}
        </div>
      </CardContent>
    </Card>
  );
}
